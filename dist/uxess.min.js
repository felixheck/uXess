(function(){"use strict";angular.module("uxess",["templates"])})(),angular.module("templates",[]).run(["$templateCache",function($templateCache){}]),function(){"use strict";function accessHandler(ACCESS_TYPES,permitHandler){function parseAccessType(accessType){var parsedAccessType=defaultAccessType;return angular.isString(accessType)&&(parsedAccessType=angular.lowercase(accessType).trim()),parsedAccessType}var accessHandler={},defaultAccessType="any";return accessHandler.setDefaultAccessType=function setDefaultAccessType(accessType){var isVerified=this.verifyAccessType(accessType),parsedAccessType=parseAccessType(accessType);isVerified&&(defaultAccessType=parsedAccessType)},accessHandler.getDefaultAccessType=function getDefaultAccessType(){return defaultAccessType},accessHandler.verifyAccessType=function verifyAccessType(accessType){var parsedAccessType=parseAccessType(accessType),accessTypeKeys=Object.keys(ACCESS_TYPES);return accessTypeKeys.indexOf(parsedAccessType)!==-1},accessHandler.isAccessible=function isAccessible(permits,accessType){var isVerified=this.verifyAccessType(accessType),parsedAccessType=parseAccessType(accessType),permitTesterName=ACCESS_TYPES[parsedAccessType];return isVerified&&permitHandler[permitTesterName](permits)},accessHandler}angular.module("uxess").factory("accessHandler",accessHandler)}(),function(){"use strict";angular.module("uxess").constant("ACCESS_TYPES",{any:"hasAnyPermits",all:"hasPermits",none:"hasNonePermits"})}(),function(){"use strict";function permitHandler(){function inspectPermits(element){return data.permits.indexOf(element)!==-1}function parsePermitList(permits){return permits.map(function(permit){return angular.lowercase(permit).trim()})}var permitHandler={},data={permits:[]};return permitHandler.parsePermits=function parsePermits(permits){var parsedPermits=[];return permits&&angular.isString(permits)&&(permits=permits.split(",")),permits&&permits.length&&(parsedPermits=parsePermitList(permits)),parsedPermits},permitHandler.getPermits=function getPermits(){return data.permits},permitHandler.setPermits=function setPermits(permits){data.permits=this.parsePermits(permits)},permitHandler.hasPermits=function hasPermits(permits){var parsedPermits=this.parsePermits(permits);return parsedPermits.every(inspectPermits)},permitHandler.hasAnyPermits=function hasAnyPermits(permits){var parsedPermits=this.parsePermits(permits);return parsedPermits.some(inspectPermits)},permitHandler.hasNonePermits=function hasNonePermits(permits){return!this.hasAnyPermits(permits)},permitHandler}angular.module("uxess").factory("permitHandler",permitHandler)}()